-- ost 테이블 생성
CREATE TABLE ost(
    ono NUMBER(6)
        CONSTRAINT OST_ONO_PK PRIMARY KEY,
    otitle VARCHAR2(50 CHAR)
        CONSTRAINT OST_OTT_NN NOT NULL,
    osinger VARCHAR2(30 CHAR)
        CONSTRAINT OST_SINGER_NN NOT NULL,
    mnum NUMBER(6)
        CONSTRAINT OST_MNUM_FK REFERENCES movie(mno)
        CONSTRAINT OST_MNUM_NN NOT NULL,
    pnum NUMBER(6)
        CONSTRAINT OST_PNUM_FK REFERENCES platform(pno)
        
);

-- 감상포인트
CREATE TABLE impoint(
    ino NUMBER(6) 
        CONSTRAINT IMP_INO_PK PRIMARY KEY,
    ipoint VARCHAR2(100 CHAR)
        CONSTRAINT IMP_IPOINT_NN NOT NULL
);

-- 플랫폼
CREATE TABLE platform(
    pno NUMBER(6)
        CONSTRAINT PLAT_PNO_PK PRIMARY KEY,
    pname VARCHAR2(100 CHAR)
        CONSTRAINT PLAT_PNAME_NN NOT NULL
);

-- 찜하기 
CREATE TABLE heart(
    hno NUMBER(6)
        CONSTRAINT HEART_HNO_PK PRIMARY KEY,
    mnum NUMBER(6)
        CONSTRAINT HEART_MNUM_FK REFERENCES movie(mno)
        CONSTRAINT HEART_MNUM_NN NOT NULL,
    unum NUMBER(6)
        CONSTRAINT HEART_UNUM_FK REFERENCES user(uno)
        CONSTRAINT HEART_UNUM_NN NOT NULL
);

-- 감정
CREATE TABLE emotion(
    eno NUMBER(6)
        CONSTRAINT EMO_ENO_PK PRIMARY KEY,
    eface VARCHAR2(100 CHAR)
        CONSTRAINT EMO_EFACE_NN NOT NULL
);

-- 회원정보
CREATE TABLE user(
    uno NUMBER(6)
        CONSTRAINT USER_UNO_PK PRIMARY KEY,
    uid VARCHAR2(20 CHAR)
        CONSTRAINT USER_UID_UK UNIQUE,
    upw VARCHAR2(40 CHAR)
        CONSTRAINT USER_UPW_NN NOT NULL,
    unickname VARCHAR2(20 CHAR)
        CONSTRAINT USER_UNICK_NN NOT NULL,
    ugen CHAR(1) DEFAULT 'M'
        CONSTRAINT USER_UGEN_CK CHECK (ugen IN('M','F'))
        CONSTRAINT USER_UGEN_NN NOT NULL,
    uage NUMBER(3)
        CONSTRAINT USER_UAGET_NN NOT NULL,
    enum NUMBER(6)
        CONSTRAINT USER_ENUM_FK REFERENCES emotion(eno)
        CONSTRAINT USER_ENUM_NN NOT NULL,
    hnum NUMBER(6)
        CONSTRAINT USER_HNUM_FK REFERENCES heart(hno)
        CONSTRAINT USER_HNUM_NN NOT NULL,
    umail VARCHAR2(50 CHAR)
        CONSTRAINT USER_UMAIL_NN NOT NULL,
    uname VARCHAR2(30 CHAR)
        CONSTRAINT USER_UNAME_NN NOT NULL,
    isShow CHAR(1) DEFAULT 'Y'
        CONSTRAINT USER_SHOW_CK CHECK (isShow IN('Y','N'))
        CONSTRAINT USER_SHOW_NN NOT NULL

);


-- 한줄평 테이블 생성
CREATE TABLE review(
    rno NUMBER(6)
        CONSTRAINT RVI_RNO_PK PRIMARY KEY,
    mid VARCHAR2(20 CHAR)
        CONSTRAINT RVI_MID_FK REFERENCES user(uid)
        CONSTRAINT RVI_MID_NN NOT NULL,
    body VARCHAR2(1000)
        CONSTRAINT RVI_BODY_NN NOT NULL,
    rdate DATE DEFAULT sysdate
        CONSTRAINT RVI_DATE_NN NOT NULL,
    mnum NUMBER(6)
        CONSTRAINT RVI_MNUM_FK REFERENCES movie(mno)
        CONSTRAINT RVI_MNUM_NN NOT NULL
);

-- 영화정보 테이블 생성
CREATE TABLE movie(
    mno NUMBER(6)
        CONSTRAINT MOV_MNO_PK PRIMARY KEY,
    mtilte VARCHAR2(30 CHAR)
        CONSTRAINT MOV_MTT_NN NOT NULL,
    mdir VARCHAR2(30 CHAR)
        CONSTRAINT MOV_MDIR_NN NOT NULL,
    mactor VARCHAR2(30 CHAR)
        CONSTRAINT MOV_MAC_NN NOT NULL,
    myear NUMBER(4)
        CONSTRAINT MOV_MYEAR_NN NOT NULL,
    mplot VARCHAR2(4000),
    mrate NUMBER(2),
    most VARCHAR2(50 CHAR),
    mgenre VARCHAR2(30 CHAR),
    mhour NUMBER(3),
    pnum NUMBER(6)
        CONSTRAINT MOV_PNUM_FK REFERENCES platform(pno),
    impoint VARCHAR2(100 CHAR)
        CONSTRAINT MOV_IMP_FK REFERENCES impoint(ipoint)
);